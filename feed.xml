<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
<title type="text">Jernej Strasner</title>
<generator uri="https://github.com/mojombo/jekyll">Jekyll</generator>
<link rel="self" type="application/atom+xml" href="http://localhost:4000/feed.xml" />
<link rel="alternate" type="text/html" href="http://localhost:4000" />
<updated>2015-07-06T12:36:44+02:00</updated>
<id>http://localhost:4000/</id>
<author>
  <name>Jernej Strasner</name>
  <uri>http://localhost:4000/</uri>
  
</author>


<entry>
  <title type="html"><![CDATA[Smooth gradients on iOS/OSX]]></title>
 <link rel="alternate" type="text/html" href="http://localhost:4000/2014/01/09/smooth-gradients-ios.html" />
  <id>http://localhost:4000/2014/01/09/smooth-gradients-ios</id>
  <published>2014-01-09T00:00:00+01:00</published>
  <updated>2014-01-09T00:00:00+01:00</updated>
  <author>
    <name>Jernej Strasner</name>
    <uri>http://localhost:4000</uri>
    <email></email>
  </author>
  <content type="html">
    &lt;p&gt;I thought drawing gradients on iOS is easy. Well, until our designer gave me this:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/2013-10-17/gradient_ps.png&quot; alt=&quot;&quot; title=&quot;Smooth gradient drawn in Photoshop&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I went on and implemented the &lt;code&gt;drawRect:&lt;/code&gt; method on a custom UIView. I used &lt;code&gt;CGGradient&lt;/code&gt; and wrote the drawing code. I ran the project in the simulator and noticed that the gradient was quite different. Ran on the device, same thing.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/2013-10-17/gradient_cg.png&quot; alt=&quot;&quot; title=&quot;Gradient drawn with CGGradient&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I played around with different colors and their positions but nothing turned out like the Photoshop gradient. After some head scratching I figured it must be something to do with how the colors are interpolated. &lt;code&gt;CGGradient&lt;/code&gt; uses a linear interpolation of colors.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/2013-10-17/linear.png&quot; alt=&quot;&quot; title=&quot;Plot y = x&quot; /&gt;&lt;/p&gt;

&lt;p&gt;What I need is a slope (ease-in ease-out for you familiar with animation timings) function and apply that to each color component. I actually cared only about transparency so I had to only adjust the alpha channel.
I needed this:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/2013-10-17/slope_func.png&quot; alt=&quot;&quot; title=&quot;Plot slope function&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/2013-10-17/slope.png&quot; alt=&quot;&quot; title=&quot;Plot slope&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Looking at the documentation, &lt;code&gt;CGGradient&lt;/code&gt; doesn’t support custom color interpolation. There is something called &lt;code&gt;CGShading&lt;/code&gt; that does. The documentation is not absolutely clear on how to use it, but after some experimenting I came up with a solution, which is presented below. There is also a sample project available on &lt;a href=&quot;https://github.com/jernejstrasner/Smooth-Gradient&quot;&gt;GitHub&lt;/a&gt; so you can compare CGGradient and CGShading.&lt;/p&gt;

&lt;p&gt;Hope somebody finds this useful!&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/6319645344d17e7df8aa.js&quot;&gt; &lt;/script&gt;


    &lt;p&gt;&lt;a href=&quot;http://localhost:4000/2014/01/09/smooth-gradients-ios.html&quot;&gt;Smooth gradients on iOS/OSX&lt;/a&gt; was originally published by Jernej Strasner at &lt;a href=&quot;http://localhost:4000&quot;&gt;Jernej Strasner&lt;/a&gt; on January 09, 2014.&lt;/p&gt;
  </content>
</entry>


<entry>
  <title type="html"><![CDATA[The ternary operator in C]]></title>
 <link rel="alternate" type="text/html" href="http://localhost:4000/2013/07/24/c-ternary-operator.html" />
  <id>http://localhost:4000/2013/07/24/c-ternary-operator</id>
  <published>2013-07-24T14:58:00+02:00</published>
  <updated>2013-07-24T14:58:00+02:00</updated>
  <author>
    <name>Jernej Strasner</name>
    <uri>http://localhost:4000</uri>
    <email></email>
  </author>
  <content type="html">
    &lt;p&gt;Most programmers are familiar with the ternary operator &lt;a href=&quot;http://en.wikipedia.org/wiki/%3F:#C&quot;&gt;?:&lt;/a&gt; that is available in C and most other languages.
But what some people may not know is that you can also use this operator with only two arguments.&lt;/p&gt;

&lt;p&gt;Instead of writing&lt;/p&gt;

&lt;figure class=&quot;code-highlight-figure&quot;&gt;&lt;div class=&quot;code-highlight&quot;&gt;&lt;pre class=&quot;code-highlight-pre&quot;&gt;&lt;div data-line=&quot;1&quot; class=&quot;code-highlight-row unnumbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;23&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;2&quot; class=&quot;code-highlight-row unnumbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;34&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;you can do this&lt;/p&gt;

&lt;figure class=&quot;code-highlight-figure&quot;&gt;&lt;div class=&quot;code-highlight&quot;&gt;&lt;pre class=&quot;code-highlight-pre&quot;&gt;&lt;div data-line=&quot;1&quot; class=&quot;code-highlight-row unnumbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;23&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;2&quot; class=&quot;code-highlight-row unnumbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;34&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;The other thing some of you may not know is that when defining a const you can’t use an if statement to define it based on a condition, but you can do this:&lt;/p&gt;

&lt;figure class=&quot;code-highlight-figure&quot;&gt;&lt;div class=&quot;code-highlight&quot;&gt;&lt;pre class=&quot;code-highlight-pre&quot;&gt;&lt;div data-line=&quot;1&quot; class=&quot;code-highlight-row unnumbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;23&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;2&quot; class=&quot;code-highlight-row unnumbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;34&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;That’s it for the first post!&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;http://localhost:4000/2013/07/24/c-ternary-operator.html&quot;&gt;The ternary operator in C&lt;/a&gt; was originally published by Jernej Strasner at &lt;a href=&quot;http://localhost:4000&quot;&gt;Jernej Strasner&lt;/a&gt; on July 24, 2013.&lt;/p&gt;
  </content>
</entry>

</feed>
